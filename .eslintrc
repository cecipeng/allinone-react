{
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    // "airbnb",
    "react-app"
  ],
  "env": { // 脚本将要运行在什么环境中
    "browser": true,
    "es6": true
  },
  "globals": { // 额外的全局变量
    "window": true,
    "document": true
  },
  "root": true, // 以当前目录为根目录，不再向上查找 .eslintrc.js
  "rules": {
    // -------------- 命名规范
    "react/boolean-prop-naming": "warn",                      // 布尔值类型的 propTypes 的 name 必须为 is 或 has 开头
    "react/jsx-handler-names": "off",                         // handler 的名称必须是 onXXX 或 handleXXX
    "react/jsx-pascal-case": "error",                         // React组件使用帕斯卡命名（驼峰，首字母大写），实例使用小骆驼式命名

    // -------------- 代码风格
    "indent": ["error", 2],                                   // 一个缩进必须用N个空格替代
    "quotes": ["error", "single"],                            // 必须用双引号/单引号: double / single
    "jsx-quotes": ["error", "prefer-single"],                 // jsx 中的属性必须用双引号/单引号：prefer-double / prefer-single
    "semi": "off",                                            // 结尾必须有分号
    "eol-last": "warn",                                       // 文件最后一行必须有一个空行
    "react/jsx-wrap-multilines": "warn",                      // 将多行的JSX标签写在 ()里
    "react/jsx-closing-bracket-location": "warn",             // 有多行的属性， 关闭标签时新建一行
    "react/jsx-tag-spacing": "warn",                          // jsx 的开始和闭合处禁止有空格
    "react/jsx-curly-spacing": "warn",                        // 大括号内前后禁止有空格
    "react/jsx-equals-spacing": "warn",                       // props 与 value 之间的等号前后禁止有空格
    "comma-dangle": "warn",                                   // 对象的最后一个属性末尾必须有逗号
    "space-before-blocks": "warn",                            // if, function 等的大括号之前必须要有空格，比如 if (a) {
    "space-before-function-paren": "off",                     // function 的小括号之前必须要有空格
    "space-infix-ops": "warn",                                // 操作符左右必须有空格，比如 let sum = 1 + 2;
    "arrow-spacing": "warn",                                  // 箭头函数的箭头前后必须有空格
    "spaced-comment": "warn",                                 // 注释的斜线或 * 后必须有空格
    "no-multi-spaces": [                                      // 禁止出现连续的多个空格，除非是注释前，或对齐对象的属性、变量定义、import 等
      "error",                                   
      {
        "ignoreEOLComments": true,
        "exceptions": {
          "Property": true,
          "BinaryExpression": false,
          "VariableDeclarator": true,
          "ImportDeclaration": true
        }
      }
    ],       
    "no-multiple-empty-lines": [                              // 禁止出现超过N行的连续空行
      "error",
      {
        "max": 2
      }
    ],

    // -------------- 语法规范
    "react/self-closing-comp": "error",                       // 组件内没有 children 时，必须使用自闭和写法
    "react/void-dom-elements-no-children": "error",           // HTML 中的自闭和标签禁止有 children
    "react/jsx-no-duplicate-props": "error",                  // 禁止出现重复的 props
    "react/jsx-no-bind": "warn",                              // 当在 render() 里使用事件处理方法时，提前在构造函数里把 this 绑定上去
    "react/no-unescaped-entities": "warn",                    // 禁止在组件的内部存在未转义的 >, ", " 或 }
    "no-const-assign": "error",                               // 禁止对使用 const 定义的常量重新赋值
    "no-var": "error",                                        // 禁止使用 var
    
    // -------------- 强制包含
    "react/display-name": "off",                              // 组件必须有 displayName 属性
    "react/prop-types": "off",                                // 组件必须写 propTypes
    "react/default-props-match-prop-types": "off",            // 一个 defaultProps 必须有对应的 propTypes
    "react/require-render-return": "error",                   // render 方法中必须有返回值
    "react/jsx-key": "error",                                 // 数组中的 jsx 必须有 key
    
    // -------------- React生命周期
    "react/no-did-mount-set-state": "off",                    // 禁止在 componentDidMount 里面使用 setState（因为didmount在render后触发，setState会触发重绘，即执行完didmount后又执行一遍render）
    "react/no-did-update-set-state": "error",                 // 禁止在 componentDidUpdate 里面使用 setState
    "react/no-will-update-set-state": "error",                // 禁止在 componentWillUpdate 中使用 setState
    "react/no-redundant-should-component-update": "off",      // 禁止在 PureComponent 中使用 shouldComponentUpdate  

    // -------------- 其他
    "react/no-deprecated": "error"                            // 禁止使用已废弃的 api
  }
}